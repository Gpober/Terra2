name: Claude Max Build & Deploy with Official Action
on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      deploy_target:
        description: 'Where to deploy?'
        type: choice
        options:
        - netlify
        - vercel
        - github-pages
        default: 'netlify'
      claude_analysis:
        description: 'Run Claude analysis?'
        type: boolean
        default: true

permissions:
  contents: read
  pages: write
  id-token: write
  issues: write
  pull-requests: write

env:
  NODE_VERSION: '18'

jobs:
  # Phase 1: Official Claude Max Analysis
  claude-analysis:
    if: github.event.inputs.claude_analysis != 'false'
    runs-on: ubuntu-latest
    outputs:
      analysis-result: ${{ steps.claude-output.outputs.result }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Claude Max Code Analysis
        uses: grll/claude-code-base-action@beta
        with:
          prompt: |
            Analyze this Next.js financial dashboard project with Supabase backend for deployment readiness:
            
            Please review:
            1. Code quality and TypeScript usage
            2. Supabase integration and database patterns
            3. Authentication and security implementation
            4. Performance optimizations needed
            5. Bundle size concerns
            6. Build configuration recommendations
            7. Database schema and query optimization
            8. RLS (Row Level Security) policies if present
            
            Focus on the main financial component at src/app/financials/page.tsx and any Supabase-related code.
            
            Provide:
            - Overall quality score (1-10)
            - Critical issues that must be fixed before deployment
            - Performance optimization recommendations
            - Security review (especially Supabase RLS)
            - Build configuration suggestions
            - Backend/database recommendations
            
            Generate a comprehensive markdown report with your findings and recommendations.
          system_prompt: "You are a senior full-stack engineer with expertise in Next.js, React, Supabase, and deployment optimization. Focus on production readiness, performance, security, and best practices for financial applications."
          allowed_tools: "Bash(git:*),View,GlobTool,GrepTool,BatchTool"
          max_turns: "10"
          claude_env: |
            NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
            NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
            SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          anthropic_api_key: ${{ secrets.CLAUDE_API_KEY }}

      - name: Extract Claude Analysis Results
        id: claude-output
        run: |
          echo "result=completed" >> $GITHUB_OUTPUT
          echo "‚úÖ Claude Max analysis completed successfully"

  # Phase 2: Build with Claude Optimizations
  build:
    needs: [claude-analysis]
    runs-on: ubuntu-latest
    outputs:
      build-status: ${{ steps.build.outputs.status }}
      build-size: ${{ steps.analyze-bundle.outputs.size }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Fix Package Lock Sync
        run: |
          echo "üîß Checking package.json and lock file sync..."
          # If lock file is out of sync, regenerate it
          if ! npm ci --dry-run; then
            echo "‚ö†Ô∏è Lock file out of sync, regenerating..."
            rm -f package-lock.json
            npm install
          fi

      - name: Install dependencies
        run: |
          echo "üì¶ Installing dependencies..."
          npm ci

      - name: Claude Max Build Optimization
        uses: grll/claude-code-base-action@beta
        with:
          prompt: |
            Based on your previous analysis, help optimize this Next.js project for production build:
            
            1. Review the current next.config.js (if it exists)
            2. Create or update build configuration for optimal performance
            3. Suggest any package.json optimizations
            4. Identify any build-time optimizations needed
            5. Ensure proper static export configuration for Netlify deployment
            
            Apply the optimizations directly to the files.
          append_system_prompt: "Focus on creating production-ready build configurations. Ensure static export compatibility."
          allowed_tools: "Bash(git:*),View,GlobTool,GrepTool,BatchTool"
          max_turns: "5"
          anthropic_api_key: ${{ secrets.CLAUDE_API_KEY }}

      - name: Build Application
        id: build
        run: |
          echo "üî® Building with Claude Max optimizations..."
          npm run build
          echo "status=success" >> $GITHUB_OUTPUT
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}

      - name: Analyze Bundle Size
        id: analyze-bundle
        run: |
          echo "üìä Analyzing build output..."
          BUILD_SIZE=$(du -sh out/ | cut -f1)
          echo "Build size: $BUILD_SIZE"
          echo "size=$BUILD_SIZE" >> $GITHUB_OUTPUT
          
          echo "Large files in build:"
          find out/ -type f -size +500k -exec ls -lh {} \; | head -10

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output-${{ github.run_number }}
          path: out/
          retention-days: 30

      - name: Verify Build Output
        run: |
          echo "üìÅ Checking build output..."
          ls -la out/ || echo "No out/ directory found"
          find out/ -type f | head -10 || echo "Build output verification failed"

  # Phase 3: Deploy to Netlify
  deploy-netlify:
    if: github.event.inputs.deploy_target == 'netlify' || github.event.inputs.deploy_target == ''
    needs: [build, claude-analysis]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-output-${{ github.run_number }}
          path: dist/

      - name: Deploy to Netlify
        uses: netlify/actions/cli@master
        with:
          args: deploy --prod --dir=dist
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

  # Phase 4: Post-Deploy Claude Review
  post-deploy-review:
    needs: [build, claude-analysis, deploy-netlify]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Claude Max Post-Deploy Analysis
        uses: grll/claude-code-base-action@beta
        with:
          prompt: |
            The deployment is complete! Please provide a post-deployment analysis:
            
            1. Review the deployment success
            2. Identify any potential runtime issues to monitor
            3. Suggest performance monitoring strategies
            4. Recommend next steps for optimization
            5. Create a deployment summary report
            
            Build Status: ${{ needs.build.outputs.build-status }}
            Build Size: ${{ needs.build.outputs.build-size }}
            
            Generate a comprehensive deployment report in markdown format.
          system_prompt: "You are a DevOps engineer providing post-deployment analysis and monitoring recommendations."
          allowed_tools: "Bash(git:*),View,GlobTool,GrepTool,BatchTool"
          max_turns: "5"
          claude_env: |
            BUILD_STATUS: ${{ needs.build.outputs.build-status }}
            BUILD_SIZE: ${{ needs.build.outputs.build-size }}
            DEPLOYMENT_TARGET: netlify
          anthropic_api_key: ${{ secrets.CLAUDE_API_KEY }}

      - name: Create Deployment Issue
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `ü§ñ Claude Max Deployment #${{ github.run_number }} - Official Action`,
              body: `
              # üöÄ Claude Max Deployment Complete
              
              **Status:** ${{ needs.build.outputs.build-status }}
              **Build Size:** ${{ needs.build.outputs.build-size }}
              **Claude Analysis:** ${{ needs.claude-analysis.outputs.analysis-result }}
              
              ## ü§ñ Official Claude Max Integration
              - ‚úÖ Pre-build analysis by Claude Max
              - ‚úÖ Build optimization by Claude Max  
              - ‚úÖ Post-deploy review by Claude Max
              - ‚úÖ Successfully deployed to Netlify
              
              Your financial dashboard is live with full Claude Max AI optimization!
              
              ---
              *Powered by official Claude Max Code Base Action*
              `,
              labels: ['claude-max', 'deployment', 'official-action']
            });

  # Alternative Deploy Options
  deploy-vercel:
    if: github.event.inputs.deploy_target == 'vercel'
    needs: [build, claude-analysis]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.ORG_ID }}
          vercel-project-id: ${{ secrets.PROJECT_ID }}
          vercel-args: '--prod'

  deploy-github-pages:
    if: github.event.inputs.deploy_target == 'github-pages'
    needs: [build, claude-analysis]
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-output-${{ github.run_number }}
          path: dist/

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist/

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
